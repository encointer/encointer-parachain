[package]
name = 'encointer-runtime'
# major.minor revision must match collator node
# patch revision must match runtime spec_version
version = '1.6.17'
authors = ["Encointer <info@encointer.org>"]
license = "GPL-3.0"
edition = "2021"

[dependencies]
log = { workspace = true }
parachain-info = { workspace = true }
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }

# encointer deps
encointer-balances-tx-payment = { workspace = true }
encointer-balances-tx-payment-rpc-runtime-api = { workspace = true }
encointer-primitives = { workspace = true }
pallet-encointer-balances = { workspace = true }
pallet-encointer-bazaar = { workspace = true }
pallet-encointer-bazaar-rpc-runtime-api = { workspace = true }
pallet-encointer-ceremonies = { workspace = true }
pallet-encointer-ceremonies-rpc-runtime-api = { workspace = true }
pallet-encointer-communities = { workspace = true }
pallet-encointer-communities-rpc-runtime-api = { workspace = true }
pallet-encointer-faucet = { workspace = true }
pallet-encointer-reputation-commitments = { workspace = true }
pallet-encointer-scheduler = { workspace = true }

# Substrate dependencies (figure out crates.io versions in the respective release-crates-io-* branch: https://github.com/paritytech/polkadot-sdk/blob/release-crates-io-v1.2.0/Cargo.lock

sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-collective = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-membership = { workspace = true }
pallet-proxy = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }

parachains-common = { workspace = true }

# Cumulus dependencies
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-utility = { workspace = true }

# Polkadot dependencies
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# used for try-runtime
frame-try-runtime = { workspace = true, optional = true }
try-runtime-cli = { workspace = true, optional = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
hex-literal = { workspace = true, optional = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
runtime-benchmarks = [
    "cumulus-pallet-xcmp-queue/runtime-benchmarks",
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "hex-literal",
    "pallet-balances/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-encointer-balances/runtime-benchmarks",
    "pallet-encointer-bazaar/runtime-benchmarks",
    "pallet-encointer-ceremonies/runtime-benchmarks",
    "pallet-encointer-communities/runtime-benchmarks",
    "pallet-encointer-faucet/runtime-benchmarks",
    "pallet-encointer-reputation-commitments/runtime-benchmarks",
    "pallet-encointer-scheduler/runtime-benchmarks",
    "pallet-membership/runtime-benchmarks",
    "pallet-proxy/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-treasury/runtime-benchmarks",
    "pallet-utility/runtime-benchmarks",
    "pallet-xcm/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "xcm-builder/runtime-benchmarks",
    "xcm-executor/runtime-benchmarks",
]
std = [
    "parity-scale-codec/std",
    "cumulus-pallet-aura-ext/std",
    "cumulus-pallet-dmp-queue/std",
    "cumulus-pallet-parachain-system/std",
    "cumulus-pallet-xcm/std",
    "cumulus-pallet-xcmp-queue/std",
    "cumulus-primitives-core/std",
    "cumulus-primitives-timestamp/std",
    "cumulus-primitives-utility/std",
    "encointer-balances-tx-payment-rpc-runtime-api/std",
    "encointer-balances-tx-payment/std",
    "encointer-primitives/serde_derive",
    "encointer-primitives/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "frame-try-runtime/std",
    "log/std",
    "pallet-asset-tx-payment/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-collective/std",
    "pallet-encointer-balances/std",
    "pallet-encointer-bazaar-rpc-runtime-api/std",
    "pallet-encointer-bazaar/std",
    "pallet-encointer-ceremonies-rpc-runtime-api/std",
    "pallet-encointer-ceremonies/std",
    "pallet-encointer-communities-rpc-runtime-api/std",
    "pallet-encointer-communities/std",
    "pallet-encointer-faucet/std",
    "pallet-encointer-reputation-commitments/std",
    "pallet-encointer-scheduler/std",
    "pallet-insecure-randomness-collective-flip/std",
    "pallet-membership/std",
    "pallet-proxy/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-treasury/std",
    "pallet-utility/std",
    "pallet-xcm/std",
    "parachain-info/std",
    "parachains-common/std",
    "scale-info/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "substrate-wasm-builder",
    "xcm-builder/std",
    "xcm-executor/std",
    "xcm/std",
]


try-runtime = [
    "cumulus-pallet-aura-ext/try-runtime",
    "cumulus-pallet-dmp-queue/try-runtime",
    "cumulus-pallet-parachain-system/try-runtime",
    "cumulus-pallet-xcm/try-runtime",
    "cumulus-pallet-xcmp-queue/try-runtime",
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "frame-try-runtime/try-runtime",
    "pallet-asset-tx-payment/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-collective/try-runtime",
    "pallet-encointer-balances/try-runtime",
    "pallet-encointer-bazaar/try-runtime",
    "pallet-encointer-ceremonies/try-runtime",
    "pallet-encointer-communities/try-runtime",
    "pallet-encointer-faucet/try-runtime",
    "pallet-encointer-reputation-commitments/try-runtime",
    "pallet-encointer-scheduler/try-runtime",
    "pallet-insecure-randomness-collective-flip/try-runtime",
    "pallet-membership/try-runtime",
    "pallet-proxy/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-treasury/try-runtime",
    "pallet-utility/try-runtime",
    "pallet-xcm/try-runtime",
    "parachain-info/try-runtime",
]

experimental = ["pallet-aura/experimental"]
